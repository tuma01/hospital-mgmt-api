CREATE TABLE nurse (
    `ID` BIGINT(20) PRIMARY KEY AUTO_INCREMENT NOT NULL,
    `PHOTO` MEDIUMBLOB,
    id_card VARCHAR(100) UNIQUE
);



DROP TABLE IF EXISTS TOXIC_HABITS;
CREATE TABLE TOXIC_HABITS (
    ID_TOXIC_HABITS BIGINT PRIMARY KEY AUTO_INCREMENT,
    ALCOHOL VARCHAR(200),
    TOBACCO VARCHAR(200),
    DRUGS VARCHAR(200),
    INFUSIONS VARCHAR(200),
    OTHERS VARCHAR(200)
);

DROP TABLE IF EXISTS PHYSIOLOGICAL_HABITS;
CREATE TABLE PHYSIOLOGICAL_HABITS (
    ID_PHYSIOLOGICAL_HABITS BIGINT PRIMARY KEY AUTO_INCREMENT,
    NUTRITION VARCHAR(500),
    URINATION VARCHAR(500),
    DEFECATION VARCHAR(500),
    SLEEP VARCHAR(500),
    SEXUALITY VARCHAR(500),
    ALLERGIES VARCHAR(200),
    ALLERGIC VARCHAR(500),
    SPORT_ACTIVITIES VARCHAR(200),
    OTHERS VARCHAR(200)
);

DROP TABLE IF EXISTS CONSULTATION_TYPE;
CREATE TABLE CONSULTATION_TYPE (
    ID_CONSULTATION_TYPE  INT(11) NOT NULL auto_increment,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    DEPARTMENT VARCHAR(100) NULL,
    CONSTRAINT PK_CONSULTATION_TYPE PRIMARY KEY (ID_CONSULTATION_TYPE),
    UNIQUE KEY `UK_NAME_CONSULTATION_TYPE` (`NAME`)
);

DROP TABLE IF EXISTS PROFESSIONAL_ACTIVITY;
CREATE TABLE `PROFESSIONAL_ACTIVITY` (
	`ID_PROFESSIONAL_ACTIVITY` INT(11) NOT NULL AUTO_INCREMENT,
	`NAME` VARCHAR(100) NOT NULL,
	`DESCRIPTION` VARCHAR(250) NULL,
	CONSTRAINT PK_PROFESSIONAL_ACTIVITY PRIMARY KEY (`ID_PROFESSIONAL_ACTIVITY`),
	UNIQUE INDEX `UK_NAME_PROFESSIONAL_ACTIVITY` (`NAME`)
);

DROP TABLE IF EXISTS ROOM;
CREATE TABLE ROOM (
    ID_ROOM INT NOT NULL auto_increment,
    NUMBER_ROOM INT NOT NULL,
    CAPACITY INT,
    TYPE_ROOM ENUM('PRIVATE', 'NOT_PRIVATE') comment 'this is type of room',
    NUMBER_OF_BEDS INT,
    BLOCK_FLOOR INT comment 'this is the floor ID where the room in',
    UNAVAILABLE BOOLEAN comment'this is the logical column which indicate that whether the room is available or not',
    BLOCK_CODE VARCHAR(10) comment 'this is the ID of the block where the room in',
    CONSTRAINT PK_ROOM PRIMARY KEY (ID_ROOM),
    UNIQUE KEY `UK_BLOCK_CODE_NUMBER_ROOM` (`BLOCK_CODE`, `NUMBER_ROOM`)
);

DROP TABLE IF EXISTS PATIENT_CONTACT;
CREATE TABLE `PATIENT_CONTACT` (
    `ID_PATIENT_CONTACT` BIGINT(20) NOT NULL AUTO_INCREMENT,
    `FIRSTNAME` VARCHAR(50) NOT NULL,
    `MIDDLENAME` VARCHAR(50) NULL DEFAULT NULL,
    `LASTNAME` VARCHAR(50) NOT NULL,
    `GENDER` ENUM('MALE','FEMALE','UNKNOWN') DEFAULT NULL,
    `EMAIL` VARCHAR(50) NULL DEFAULT NULL,
    `TELEPHONE` VARCHAR(50) NULL DEFAULT NULL,
    `CELL_PHONE` VARCHAR(50) NULL DEFAULT NULL,
	`RELATIONSHIP_TYPE` VARCHAR(255) NULL DEFAULT NULL,
	`NOTES` VARCHAR(250) NULL DEFAULT NULL,
	CONSTRAINT PK_PATIENT_CONTACT PRIMARY KEY (ID_PATIENT_CONTACT)
);


DROP TABLE IF EXISTS FAMILY_HISTORY;
CREATE TABLE FAMILY_HISTORY (
    ID_FAMILY_HISTORY BIGINT PRIMARY KEY AUTO_INCREMENT,
    MOTHER VARCHAR(200),
    FATHER VARCHAR(200),
    HEREDITARY_DISEASES VARCHAR(200)
);

DROP TABLE IF EXISTS DISEASES;
CREATE TABLE DISEASES (
    ID_DISEASES BIGINT PRIMARY KEY AUTO_INCREMENT,
    CARDIOVASCULAR VARCHAR(500),
    RESPIRATORY VARCHAR(500),
    GASTROINTESTINAL VARCHAR(500),
    NEPHROUROLOGY VARCHAR(500),
    NEUROLOGICAL VARCHAR(500),
    HEMATOLOGICAL VARCHAR(500),
    GYNECOLOGICAL VARCHAR(500),
    INFECTIOUS VARCHAR(500),
    ENDOCRINOLOGICAL VARCHAR(500),
    SURGICAL VARCHAR(500),
    TRAUMATOLOGICAL VARCHAR(500),
    ALLERGIC VARCHAR(500),
    EPIDEMIOLOGICAL VARCHAR(500),
    OTHERS VARCHAR(500)
);

DROP TABLE IF EXISTS `COUNTRY`;
CREATE TABLE `country` (
    `ID_COUNTRY` INT NOT NULL auto_increment,
    `ISO` VARCHAR(2) NOT NULL,
    `NAME` VARCHAR(80) NOT NULL,
    `NICE_NAME` VARCHAR(80) NOT NULL,
    `ISO3` VARCHAR(3),
    `NUM_CODE` INT(6) DEFAULT NULL,
    `PHONE_CODE` INT(5) NOT NULL,
    `CREATED_BY` VARCHAR(80),
    `CREATED_DATE` TIMESTAMP,
    `LAST_MODIFIED_BY` VARCHAR(80),
    `LAST_MODIFIED_DATE` TIMESTAMP,
    CONSTRAINT PK_COUNTRY PRIMARY KEY (`ID_COUNTRY`),
    UNIQUE KEY `UK_NAME_COUNTRY` (`NAME`),
    UNIQUE KEY `UK_CODE_COUNTRY` (`ISO`)
);


DROP TABLE IF EXISTS ADDRESS;
CREATE TABLE ADDRESS(
    ID_ADDRESS BIGINT NOT NULL auto_increment,
    ADDRESS1 VARCHAR(100) comment 'The first line of the address.',
    ADDRESS2 VARCHAR(100) comment 'The second line of address. It is Optional.',
    CITY VARCHAR(100) comment 'The name City of the address.',
    POSTAL_CODE VARCHAR(10) comment 'The postal code of the address.',
    LOCATION VARCHAR(100) comment 'Geometry data with spatial index.',
    FK_ID_COUNTRY INT,
    CONSTRAINT PK_ADDRESS PRIMARY KEY (ID_ADDRESS),
    CONSTRAINT FK_ADDRESS_COUNTRY FOREIGN KEY (FK_ID_COUNTRY) REFERENCES COUNTRY(ID_COUNTRY)
);
DROP TABLE IF EXISTS INSURANCE;
CREATE TABLE INSURANCE (
    ID_INSURANCE INT PRIMARY KEY AUTO_INCREMENT,
    INSURANCE_NUMBER INT,
    NAME VARCHAR(255) NOT NULL,
    TELEPHONE VARCHAR(50),
    FAX VARCHAR(50),
    WEB_SITE VARCHAR(100),
    INSURANCE_DATE DATE,
    FK_ID_ADDRESS BIGINT,
    CONSTRAINT FK_INSURANCE_ADDRESS FOREIGN KEY (FK_ID_ADDRESS) REFERENCES ADDRESS(ID_ADDRESS)
);

DROP TABLE IF EXISTS PERSON;
CREATE TABLE `PERSON` (
	`PERSON_TYPE` VARCHAR(31) NOT NULL,
	`ID` BIGINT(20) NOT NULL AUTO_INCREMENT,
	`TITLE` VARCHAR(50) NULL DEFAULT NULL,
	`FIRSTNAME` VARCHAR(50) NOT NULL,
	`MIDDLENAME` VARCHAR(50) NULL DEFAULT NULL,
	`LASTNAME` VARCHAR(50) NOT NULL,
	`DAY_OF_BIRTH` INT(11) NULL DEFAULT NULL,
	`MONTH_OF_BIRTH` INT(11) NULL DEFAULT NULL,
	`YEAR_OF_BIRTH` INT(11) NULL DEFAULT NULL,
	`BIRTHDAY` DATE NULL DEFAULT NULL,
	`CIVIL_STATUS` ENUM('SOLTERO', 'CASADO', 'UNION_LIBRE', 'SEPARADO', 'DIVORCIADO', 'VIUDO'),
	`GENDER` ENUM('MALE', 'FEMALE', 'UNKNOWN'),
	`FK_ID_ADDRESS` BIGINT(20) NULL DEFAULT NULL,
	`EMAIL` VARCHAR(50) NULL DEFAULT NULL,
    `TELEPHONE` VARCHAR(50) NULL DEFAULT NULL,
    `CELL_PHONE` VARCHAR(50) NULL DEFAULT NULL,
	`MARITAL_STATUS` ENUM('SINGLE', 'MARRIED', 'DIVORCED', 'WIDOWED'),
	`CREATED_BY` VARCHAR(255) NULL DEFAULT NULL,
    `CREATED_DATE` DATETIME NULL DEFAULT NULL,
    `LAST_MODIFIED_BY` VARCHAR(255) NULL DEFAULT NULL,
    `LAST_MODIFIED_DATE` DATETIME NULL DEFAULT NULL,
	CONSTRAINT PK_PERSON PRIMARY KEY (`ID`),
	UNIQUE INDEX `FK_PERSON_ADDRESS` (`FK_ID_ADDRESS`)
);

DROP TABLE IF EXISTS PATIENT;
CREATE TABLE `PATIENT` (
    `ID` BIGINT(20) NOT NULL,
    `ID_CARD` VARCHAR(100) NULL DEFAULT NULL,
    `FULL_NAME` VARCHAR(70) NOT NULL,
	`STATUS` ENUM('ACTIVE', 'INACTIVE', 'PENDING', 'DELETED'),
	`OCCUPATION` VARCHAR(100) NULL DEFAULT NULL,
	`NATIONALITY` VARCHAR(100) NULL DEFAULT NULL,
	`DEGREE_OF_INSTRUCTION` VARCHAR(100) NULL DEFAULT NULL,
	`FK_ID_COUNTRY` INT NULL DEFAULT NULL,
	`FK_ID_ROOM` INT NULL DEFAULT NULL,
	`FK_ID_PATIENT_CONTACT` BIGINT(20) NULL DEFAULT NULL,
	`PHOTO` MEDIUMBLOB,
	`FK_ID_INSURANCE` INT(11) NULL DEFAULT NULL,
	`FK_ID_NURSE` BIGINT(20) NULL DEFAULT NULL,
	CONSTRAINT PK_PATIENT PRIMARY KEY (`ID`),
	UNIQUE INDEX `UK_ID_CARD_PATIENT` (`ID_CARD`),
	UNIQUE INDEX `FK_PATIENT_COUNTRY` (`FK_ID_COUNTRY`),
	UNIQUE INDEX `FK_PATIENT_ROOM` (`FK_ID_ROOM`),
	UNIQUE INDEX `FK_PATIENT_PATIENT_CONTACT` (`FK_ID_PATIENT_CONTACT`),
	CONSTRAINT FK_PATIENT_INSURANCE FOREIGN KEY (FK_ID_INSURANCE) REFERENCES INSURANCE(ID_INSURANCE),
	CONSTRAINT FK_PATIENT_NURSE FOREIGN KEY (FK_ID_NURSE) REFERENCES NURSE(ID)
);

DROP TABLE IF EXISTS PERSONAL_HISTORY;
CREATE TABLE PERSONAL_HISTORY (
    ID_PERSONAL_HISTORY BIGINT PRIMARY KEY AUTO_INCREMENT,
    FK_ID_TOXIC_HABITS BIGINT,
    FK_ID_PHYSIOLOGICAL_HABITS BIGINT,
    FK_ID_FAMILY_HISTORY BIGINT,

    CONSTRAINT FK_PERSONALHISTORY_TOXICHABITS FOREIGN KEY (FK_ID_TOXIC_HABITS) REFERENCES TOXIC_HABITS(ID_TOXIC_HABITS),
    CONSTRAINT FK_PERSONALHISTORY_PHYSIOLOGICALHABITS FOREIGN KEY (FK_ID_PHYSIOLOGICAL_HABITS) REFERENCES PHYSIOLOGICAL_HABITS(ID_PHYSIOLOGICAL_HABITS),
    CONSTRAINT FK_PERSONALHISTORY_FAMILYHISTORY FOREIGN KEY (FK_ID_FAMILY_HISTORY) REFERENCES FAMILY_HISTORY(ID_FAMILY_HISTORY)
);

DROP TABLE IF EXISTS MEDICAL_HISTORY;
CREATE TABLE MEDICAL_HISTORY (
    ID_MEDICAL_CONSULTATION BIGINT PRIMARY KEY AUTO_INCREMENT,
    FK_ID_PATIENT BIGINT NOT NULL,
    ADMISSION_DATE DATE DEFAULT (CURRENT_DATE),
    BLOOD_GROUP VARCHAR(100),
    REASON_CONSULTATION VARCHAR(255),
    CURRENT_DISEASE VARCHAR(255),
    HISTORY_CURRENT_DISEASE VARCHAR(255),
    FAMILY_MEDICAL_HISTORY VARCHAR(255),
    FK_ID_PERSONAL_HISTORY BIGINT,
    CHILDHOOD_DISEASE VARCHAR(255),
    FK_ID_DISEASES BIGINT,
    WEIGHT DECIMAL(5, 2),
    HEIGHT DECIMAL(5, 2),

    CONSTRAINT FK_MEDICALHISTORY_PATIENT FOREIGN KEY (FK_ID_PATIENT) REFERENCES PATIENT(ID),
    CONSTRAINT FK_MEDICALHISTORY_PERSONALHISTORY FOREIGN KEY (FK_ID_PERSONAL_HISTORY) REFERENCES PERSONAL_HISTORY(ID_PERSONAL_HISTORY),
    CONSTRAINT FK_MEDICALHISTORY_DISEASES FOREIGN KEY (FK_ID_DISEASES) REFERENCES DISEASES(ID_DISEASES)
);

CREATE TABLE HOSPITAL (
    ID_HOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(50) NOT NULL,
    CODE_HOSPITAL VARCHAR(50) NOT NULL,
    TELEPHONE VARCHAR(50),
    FK_ID_ADDRESS BIGINT,
    CONSTRAINT FK_HOSPITAL_ADDRESS FOREIGN KEY (FK_ID_ADDRESS) REFERENCES ADDRESS(ID_ADDRESS)
);

CREATE TABLE DEPARTMENT_HOSPITAL (
    ID_DEPARTMENT_HOSPITAL INTEGER PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) DEFAULT NULL,
    FK_ID_HOSPITAL INT DEFAULT NULL,
    CONSTRAINT FK_DEPARTMENTHOSPITAL_HOSPITAL FOREIGN KEY (FK_ID_HOSPITAL) REFERENCES HOSPITAL(ID_HOSPITAL)
);

CREATE TABLE `HOSPITAL_NURSE` (
  `ID_HOSPITAL` int NOT NULL,
  `ID` BIGINT NOT NULL,
  PRIMARY KEY (`ID_HOSPITAL`,`ID`),
  CONSTRAINT `FK_ID_HOSPITAL` FOREIGN KEY (`ID_HOSPITAL`) REFERENCES `HOSPITAL` (`ID_HOSPITAL`),
  CONSTRAINT `FK_ID_NURSE` FOREIGN KEY (`ID`) REFERENCES `NURSE` (`ID`)
);
